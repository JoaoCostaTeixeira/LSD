// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 15.1.1 Build 189 12/02/2015 SJ Lite Edition"

// DATE "03/24/2017 13:54:46"

// 
// Device: Altera EP4CE115F29C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module ShiftRegister4 (
	clk,
	sin,
	dataOut);
input 	clk;
input 	sin;
output 	[3:0] dataOut;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \dataOut[0]~output_o ;
wire \dataOut[1]~output_o ;
wire \dataOut[2]~output_o ;
wire \dataOut[3]~output_o ;
wire \clk~input_o ;
wire \sin~input_o ;
wire [3:0] s_out;


cycloneive_io_obuf \dataOut[0]~output (
	.i(s_out[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataOut[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataOut[0]~output .bus_hold = "false";
defparam \dataOut[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \dataOut[1]~output (
	.i(s_out[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataOut[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataOut[1]~output .bus_hold = "false";
defparam \dataOut[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \dataOut[2]~output (
	.i(s_out[2]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataOut[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataOut[2]~output .bus_hold = "false";
defparam \dataOut[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \dataOut[3]~output (
	.i(s_out[3]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\dataOut[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \dataOut[3]~output .bus_hold = "false";
defparam \dataOut[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \sin~input (
	.i(sin),
	.ibar(gnd),
	.o(\sin~input_o ));
// synopsys translate_off
defparam \sin~input .bus_hold = "false";
defparam \sin~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \s_out[0] (
	.clk(\clk~input_o ),
	.d(\sin~input_o ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(s_out[0]),
	.prn(vcc));
// synopsys translate_off
defparam \s_out[0] .is_wysiwyg = "true";
defparam \s_out[0] .power_up = "low";
// synopsys translate_on

dffeas \s_out[1] (
	.clk(\clk~input_o ),
	.d(s_out[0]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(s_out[1]),
	.prn(vcc));
// synopsys translate_off
defparam \s_out[1] .is_wysiwyg = "true";
defparam \s_out[1] .power_up = "low";
// synopsys translate_on

dffeas \s_out[2] (
	.clk(\clk~input_o ),
	.d(s_out[1]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(s_out[2]),
	.prn(vcc));
// synopsys translate_off
defparam \s_out[2] .is_wysiwyg = "true";
defparam \s_out[2] .power_up = "low";
// synopsys translate_on

dffeas \s_out[3] (
	.clk(\clk~input_o ),
	.d(s_out[2]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(s_out[3]),
	.prn(vcc));
// synopsys translate_off
defparam \s_out[3] .is_wysiwyg = "true";
defparam \s_out[3] .power_up = "low";
// synopsys translate_on

assign dataOut[0] = \dataOut[0]~output_o ;

assign dataOut[1] = \dataOut[1]~output_o ;

assign dataOut[2] = \dataOut[2]~output_o ;

assign dataOut[3] = \dataOut[3]~output_o ;

endmodule
